#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>
set -e

mktmpdir() {
  dir=$(mktemp -t fakesu-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}

export PATH=$PATH:$BUILD/.apt/usr/sbin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$BUILD/.apt/usr/lib/x86_64-linux-gnu/libfakeroot

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}


BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`
BUILD_DIR=$1
CACHE_DIR=$2

WGET_BUILD="$(mktmpdir wget)"
DEBOOTSTRAP_BUILD="$(mktmpdir debootstrap)"
FAKECHROOT_BUILD="$(mktmpdir fakechroot)"
DEFAULT_DEB_PACKAGES="aptitude git-core"

set -x


echo $PATH

mkdir -p $BUILD_DIR/.tools/fakechroot
mkdir -p $CACHE_DIR/.tools/{wget,debootstrap}

export PATH=/sbin:/usr/sbin:$PATH:$CACHE_DIR/.tools/wget/bin:$CACHE_DIR/.tools/debootstrap/usr/sbin:$BUILD_DIR/.tools/fakechroot/sbin:$BUILD_DIR/.tools/fakechroot/bin
export DEBOOTSTRAP_DIR=$CACHE_DIR/.tools/debootstrap/usr/share/debootstrap

echo "-----> Fetching and installing debootstrap"
cd $DEBOOTSTRAP_BUILD
wget http://archive.ubuntu.com/ubuntu/pool/main/d/debootstrap/debootstrap_1.0.91ubuntu1.tar.gz
tar zxvf debootstrap_1.0.91ubuntu1.tar.gz
cd debootstrap-1.0.91ubuntu1

git clone https://salsa.debian.org/installer-team/debootstrap.git
cd debootstrap

DESTDIR=$CACHE_DIR/.tools/debootstrap fakeroot make
DESTDIR=$CACHE_DIR/.tools/debootstrap fakeroot make install
echo "debootstrap installed" | indent

echo "-----> Fetching, installing and vendoring fakechroot into /app/.tools/fakechroot/"
cd $FAKECHROOT_BUILD
git clone git://github.com/fabiokung/fakechroot.git
cd fakechroot
./autogen.sh
./configure --prefix=$BUILD_DIR/.tools/fakechroot
make
make install
echo "fakechroot vendored" | indent

# cd $BUILDPACK_DIR
echo "-----> Bootstraping a new base ubuntu xenial into /app/.root/"
mkdir -p $BUILD_DIR/.root

# fakeroot-tcp -l $BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu/libfakeroot/libfakeroot-tcp.so --faked $BUILD_DIR/.apt/usr/bin/faked-tcp ls -l $BUILD_DIR/.apt/usr/sbin

# $BUILD_DIR/.apt/usr/sbin/multistrap -a amd64 -f $0/stretch.conf


fakechroot -s fakeroot --no-check-gpg --variant=fakechroot trusty $BUILD_DIR/.root
fakechroot fakeroot chroot $BUILD_DIR/.root apt-get install -y --force-yes gpgv
echo "/app/.root bootstraped" | indent

sed -i -e "s/#force_color_prompt=yes/force_color_prompt=yes/" $BUILD_DIR/.root/root/.bashrc
echo "export PATH=/sbin:/usr/sbin:\$PATH" >> $BUILD_DIR/.root/root/.bashrc
echo "cd $HOME" >> $BUILD_DIR/.root/root/.bashrc

echo "-----> Updating packages"
fakechroot fakeroot chroot $BUILD_DIR/.root bash -c "cat > /etc/apt/sources.list <<EOF
deb http://archive.ubuntu.com/ubuntu trusty main universe
deb http://archive.ubuntu.com/ubuntu trusty-security main
deb http://archive.ubuntu.com/ubuntu trusty-updates main
EOF"
fakechroot fakeroot chroot $BUILD_DIR/.root apt-get update
fakechroot fakeroot chroot $BUILD_DIR/.root apt-get -y install $DEFAULT_DEB_PACKAGES
echo "packages updated" | indent

cd $BUILD_DIR/.root
ln -s ../ app
mkdir -p $BUILD_DIR/bin
cp $BUILDPACK_DIR/bin/fakesu $BUILD_DIR/bin
cp $BUILDPACK_DIR/bin/sudo $BUILD_DIR/bin


exit 0
